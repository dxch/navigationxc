<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd 
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd  
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd"
     default-lazy-init="false">
     
     
   
   
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.module.**.service">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>


	<!-- 加载 properties -->
	<context:property-placeholder location="classpath:properties/global.properties" />
	<!-- SpringContext -->
	<!--<bean id="springContextHolder" class="com.vungu.vp.core.utils.SpringContextHolder" lazy-init="false" /> -->
	<!-- c3p0连接池配置 -->
	<bean id="ds1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.driverClass}" />
		<property name="jdbcUrl" value="${db.jdbcUrl}" />
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.password}" />
		
		
		
		
	</bean>
	<bean id="ds2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db2.driverClass}" />
		<property name="jdbcUrl" value="${db2.jdbcUrl}" />
		<property name="user" value="${db2.user}" />
		<property name="password" value="${db2.password}" />
	</bean>
	<bean id="ds3" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db2.driverClass}" />
		<property name="jdbcUrl" value="${db3.jdbcUrl}" />
		<property name="user" value="${db3.user}" />
		<property name="password" value="${db3.password}" />
	</bean>
	
	<bean id="dynamicDataSource" class="com.module.source.DynamicDataSource">
   	 	<property name="targetDataSources">
      	<map>
        	<!-- 对应spring提供的AbstractRoutingDataSource的Map -->
        	<entry key="ds1" value-ref="ds1"/>
        	<entry key="ds2" value-ref="ds2"/>
        	<entry key="ds3" value-ref="ds3"/>
      	</map>
     	</property>
     	<property name="defaultTargetDataSource" ref="ds1"/>
     </bean>
     
	<!-- <bean id="dynamicDataSource" class="com.vungu.utilities.doubledatesource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="defaultDataSource" key="defaultDataSource" />
				<entry value-ref="vunmember" key="vunmember" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="defaultDataSource" />默认使用productDataSource的数据源
	</bean> -->
	
	
	<!--sqlSessionFactory配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath:mybatis-mapper/**/*Mapper.xml" />
		<property name="configLocation" value="classpath:ssm-config/mybatis/mybatis_config.xml" />
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<!-- 配置数据源切换实现类 -->  
    <bean id="dataSourceContextHolder" class="com.module.source.DataSourceContextHolder" />  




	<!--自动扫描mapper包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.module.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>



	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>